# Generated by Django 3.1.6 on 2023-01-30 15:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rack_monitor', '0001_initial'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetsn', models.CharField(max_length=100)),
                ('datacenter', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=150, null=True)),
                ('devicemodel', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=100, null=True)),
                ('usage', models.IntegerField(max_length=50, null=True)),
                ('rooms', models.CharField(max_length=100)),
                ('serialnumber', models.CharField(max_length=100, null=True)),
                ('columns', models.CharField(max_length=30)),
                ('supplier', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('macaddr', models.CharField(max_length=40, null=True)),
                ('macaddr2', models.CharField(max_length=40, null=True)),
                ('category', models.CharField(max_length=20, null=True)),
                ('weight', models.FloatField(default=0.0, null=True)),
                ('inventorycode', models.CharField(max_length=50, null=True)),
                ('lifecycle', models.CharField(max_length=100, null=True)),
                ('power', models.FloatField(default=0.0, null=True)),
                ('lastmaintenancestaff', models.CharField(max_length=100, null=True)),
                ('maintenancecycle', models.CharField(max_length=100, null=True)),
                ('current', models.FloatField(max_length=10, null=True)),
                ('nextmaintenance', models.CharField(max_length=100, null=True)),
                ('principal', models.CharField(max_length=100, null=True)),
                ('voltage', models.FloatField(null=True)),
                ('lastupdatedtime', models.DateTimeField(default=None, null=True)),
                ('maintenancecontact', models.CharField(max_length=12, null=True)),
                ('firstusetime', models.DateTimeField(blank=True, null=True)),
                ('nextupdatedtime', models.DateTimeField(default=None, null=True)),
                ('tagid', models.CharField(max_length=40)),
                ('lastseen', models.DateTimeField(auto_now=True)),
                ('energy', models.FloatField(default=None, null=True)),
                ('location', models.IntegerField(default=0, null=True)),
                ('tempf', models.FloatField(default=None, null=True)),
                ('humidityf', models.FloatField(default=None, null=True)),
                ('tempb', models.FloatField(default=None, null=True)),
                ('humidityb', models.FloatField(default=None, null=True)),
                ('battery', models.FloatField(default=None, null=True)),
                ('name', models.CharField(max_length=200)),
                ('hotspot', models.FloatField(default=0.0, null=True)),
                ('coldspot', models.FloatField(default=0.0, null=True)),
                ('highpowerevent', models.FloatField(default=0.0, null=True)),
                ('tempMax', models.FloatField(default=0.0)),
                ('tempMin', models.FloatField(default=0.0)),
                ('energyMax', models.FloatField(default=0.0)),
                ('ghostCount', models.IntegerField(default=0)),
                ('ghostStatus', models.IntegerField(default=0)),
                ('ghostStart', models.DateTimeField(default=None, null=True)),
                ('registerTime', models.DateTimeField(default=None, null=True)),
                ('deregisterTime', models.DateTimeField(default=None, null=True)),
                ('deregisteredStatus', models.BooleanField(default=False)),
                ('alertSms', models.IntegerField(default=0)),
                ('alertTime', models.DateTimeField(default=None, null=True)),
                ('floor', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.floormap')),
                ('placedIn', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='placed', to='rack_monitor.rack')),
                ('rackno', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rackno', to='rack_monitor.rack')),
                ('removedFrom', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='removed', to='rack_monitor.rack')),
            ],
        ),
        migrations.CreateModel(
            name='HotSpotEnergyEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.IntegerField()),
                ('eventValue', models.FloatField()),
                ('timestamp', models.DateTimeField(default=None)),
                ('endTime', models.DateTimeField(auto_now_add=True)),
                ('rack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rack_monitor.rack')),
                ('tagid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.asset')),
            ],
        ),
        migrations.CreateModel(
            name='GhostAvg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempf', models.FloatField()),
                ('humidityf', models.FloatField()),
                ('tempb', models.FloatField()),
                ('humidityb', models.FloatField()),
                ('power', models.FloatField()),
                ('energy', models.FloatField()),
                ('lastseen', models.DateTimeField()),
                ('battery', models.FloatField(default=0.0)),
                ('current', models.FloatField(default=0.0)),
                ('voltage', models.FloatField(default=0.0)),
                ('ghostCount', models.IntegerField(default=0)),
                ('floor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='common.floormap')),
                ('rack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rack_monitor.rack')),
                ('tagid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.asset')),
            ],
        ),
        migrations.CreateModel(
            name='AssetTrackingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempf', models.FloatField()),
                ('humidityf', models.FloatField()),
                ('tempb', models.FloatField()),
                ('humidityb', models.FloatField()),
                ('power', models.FloatField()),
                ('energy', models.FloatField()),
                ('lastseen', models.DateTimeField()),
                ('battery', models.FloatField(default=0.0)),
                ('current', models.FloatField(default=0.0)),
                ('voltage', models.FloatField(default=0.0)),
                ('location', models.IntegerField(default=0)),
                ('floor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='common.floormap')),
                ('rack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rack_monitor.rack')),
                ('tagid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.asset')),
            ],
        ),
        migrations.CreateModel(
            name='AssetTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempf', models.FloatField()),
                ('humidityf', models.FloatField()),
                ('tempb', models.FloatField()),
                ('humidityb', models.FloatField()),
                ('power', models.FloatField()),
                ('energy', models.FloatField()),
                ('lastseen', models.DateTimeField()),
                ('battery', models.FloatField(default=0.0)),
                ('current', models.FloatField(default=0.0)),
                ('voltage', models.FloatField(default=0.0)),
                ('location', models.IntegerField(default=0)),
                ('floor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='common.floormap')),
                ('rack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rack_monitor.rack')),
                ('tagid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.asset')),
            ],
        ),
        migrations.CreateModel(
            name='AssetLocationTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.IntegerField(default=0)),
                ('startTime', models.DateTimeField(default=None)),
                ('endTime', models.DateTimeField(default=None)),
                ('rack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rack_monitor.rack')),
                ('tagid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.asset')),
            ],
        ),
    ]
